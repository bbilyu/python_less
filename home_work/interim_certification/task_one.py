# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞: ‚Äú1-–π —á–µ—Ç–≤–µ—Ä–≥ –Ω–æ—è–±—Ä—è‚Äù, ‚Äú3—è —Å—Ä–µ–¥–∞ –º–∞—è‚Äù –∏ —Ç.–ø.
# üìå –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–≥–æ –≤ –¥–∞—Ç—É –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–¥—É.
# üìå –õ–æ–≥–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ª—é–±–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –±–µ—Ä—ë—Ç—Å—è –ø–µ—Ä–≤—ã–π –≤ –º–µ—Å—è—Ü–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –∏/–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü.
# üìå –ù–∞—É—á–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–∞, –Ω–æ –∏ —á–∏—Å–ª–æ–≤—ã–µ, —Ç.–µ –Ω–µ –º–∞—è, –∞ 5.

import logging
import sys
from datetime import datetime, date


logging.basicConfig(filename='parse_date.log',
                    filemode='w',
                    encoding='utf-8',
                    format='{asctime} {levelname:<8} —Ñ—É–Ω–∫—Ü–∏—è "{funcName}()" —Å—Ç—Ä–æ–∫–∞ {lineno:>3d} : {msg}',
                    style='{',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

months = {'—è–Ω–≤': 1, '—Ñ–µ–≤': 2, '–º–∞—Ä': 3, '–∞–ø—Ä': 4, '–º–∞—è': 5, '–∏—é–Ω': 6, '–∏—é–ª': 7, '–∞–≤–≥': 8, '—Å–µ–Ω': 9, '–æ–∫—Ç': 10, '–Ω–æ—è': 11, '–¥–µ–∫': 12}
weekdays = {'–ø–æ–Ω': 1, '–≤—Ç–æ': 2, '—Å—Ä–µ': 3, '—á–µ—Ç': 4, '–ø—è—Ç': 5, '—Å—É–±': 6, '–≤–æ—Å': 7}

def parse_date(text: str):
    '''–ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –≤ –æ–±—ä–µ–∫—Ç –¥–∞—Ç—É'''
    try:
        year = datetime.now().year
        count, weekday_, month_ = text.split()

        if count.isdigit():
            count = int(count)
        else:
            count = 1

        if month_.isdigit():
            month = int(month_)
        else:
            month = months[month_[:3]]

        if weekday_.isdigit():
            weekday = int(weekday_)
        else:
            weekday = weekdays[weekday_[:3]] - 1

    except Exception as exc:
        logger.info(f'{count}-–π  {weekday_}  {month_} {year} =  –æ—à–∏–±–∫–∞: {exc}')
        return

    count_week = 0
    for day in range(1, 31 + 1):
        rezult = date(year=year, month=month, day=day)
        if rezult.weekday() == weekday:
            count_week += 1
            if count_week == count:
                logger.info(f'{count}-–π {weekday_} {month_} {year} = {rezult} ')
                return rezult


if __name__ == '__main__':
    if len(sys.argv) > 1:
        input_text = ' '.join(sys.argv[1:])
        print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', parse_date(input_text))
    else:
        print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', parse_date(input("–í–≤–æ–¥: ")))
        print('–†–µ–∑—É–ª—å—Ç–∞—Ç "3—è —Å—Ä–µ–¥–∞ 5" :', parse_date("3—è —Å—Ä–µ–¥–∞ 5"))